# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
pool:
  vmImage: 'ubuntu-latest'
steps:
- task: TerraformTaskV1@0
  displayName: Terra Init
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: $(System.DefaultWorkingDirectory)
    backendServiceArm: 'rmdLab AFA Service Connection'
    backendAzureRmResourceGroupName: 'rmdLabRG'
    backendAzureRmStorageAccountName: 'rmdlabstorageaccount'
    backendAzureRmContainerName: 'rmdlabstoragecontainer'
    backendAzureRmKey: 'tf_afa/terraform.tfstate'
- task: TerraformTaskV1@0
  displayName: Terra Destroy
  inputs:
    provider: 'azurerm'
    command: 'destroy'
    workingDirectory: $(System.DefaultWorkingDirectory)
    environmentServiceNameAzureRM: 'rmdLab AFA Service Connection'
- task: TerraformTaskV1@0
  displayName: Terra Plan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: $(System.DefaultWorkingDirectory)
    environmentServiceNameAzureRM: 'rmdLab AFA Service Connection'
- task: TerraformTaskV1@0
  displayName: Terra Apply
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: $(System.DefaultWorkingDirectory)
    environmentServiceNameAzureRM: 'rmdLab AFA Service Connection'